Rough guideline of the logic

1. Create a class/struct named Item that will store the features of the item which are price and beauty

2. Retrieve the price feature of each item and store it in a vector called prices.
   2.1. Sort the vector into ascending order

3. Create an int array called queries.
   3.1. Sort the queries into an ascending order and store the sorted array into an empty array.

4. Use the binary search with a single parameter of price to find a price that is less than or equal to some q[i].
   4.1. Divide the list until there are less than 6 elements and if the query is not found by then then iterate through the list successively and return the which has the smallest difference with the price.
   4.2. Once we find the price, we determine its associated beauty feature. You can use some member getter function which accepts price as an argument and returns the beauty.
   4.3. Once the getter function returns the beauty value, then store the value into an array called list.

5. To find the accompanying beauty feature for each price feature we loop through each Item object.
   5.1 In each iteration, we will first check whether an Item object price feature matches some index value in prices.
   5.1.1 If it does, then we will that current object items[i] to get the accompanying feature of price which in this case is beauty.  